Sure, here is a list of common array methods in JavaScript:

1. **push()**: Adds one or more elements to the end of an array and returns the new length.
2. **pop()**: Removes the last element from an array and returns that element.
3. **shift()**: Removes the first element from an array and returns that element.
4. **unshift()**: Adds one or more elements to the beginning of an array and returns the new length.
5. **concat()**: Combines two or more arrays and returns a new array.
6. **join()**: Joins all elements of an array into a string.
7. **slice()**: Returns a shallow copy of a portion of an array into a new array object.
8. **splice()**: Changes the contents of an array by removing, replacing, or adding elements.
9. **indexOf()**: Returns the first index at which a given element can be found in the array, or -1 if it is not present.
10. **lastIndexOf()**: Returns the last index at which a given element can be found in the array, or -1 if it is not present.
11. **includes()**: Determines whether an array contains a certain element.
12. **find()**: Returns the first element in an array that satisfies a provided testing function.
13. **findIndex()**: Returns the index of the first element in an array that satisfies a provided testing function.
14. **forEach()**: Executes a provided function once for each array element.
15. **map()**: Creates a new array with the results of calling a provided function on every element in the array.
16. **filter()**: Creates a new array with all elements that pass the test implemented by the provided function.
17. **reduce()**: Applies a function against an accumulator and each element in the array to reduce it to a single value.
18. **reduceRight()**: Applies a function against an accumulator and each element in the array (from right to left) to reduce it to a single value.
19. **some()**: Checks if at least one element in the array passes a test.
20. **every()**: Checks if all elements in the array pass a test.
21. **sort()**: Sorts the elements of an array in place and returns the sorted array.
22. **reverse()**: Reverses the order of the elements in an array in place.
23. **isArray()**: Checks if an object is an array.
24. **flat()**: Creates a new array with all sub-array elements concatenated into it recursively up to a specified depth.
25. **flatMap()**: First maps each element using a mapping function, then flattens the result into a new array.
26. **from()**: Creates a new, shallow-copied array instance from an array-like or iterable object.
27. **keys()**: Returns an iterable of keys in the array.
28. **values()**: Returns an iterable of values in the array.
29. **entries()**: Returns an iterable of key-value pairs in the array.
30. **toString()**: Returns a string representing the specified array and its elements.

These are some of the most commonly used array methods in JavaScript. Depending on the version of JavaScript you're using, there may be additional methods or variations available.